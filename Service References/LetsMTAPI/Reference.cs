//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LetsMT.MTProvider.LetsMTAPI {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
    [System.SerializableAttribute()]
    public partial class Fault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TranslateResult", Namespace="http://schemas.datacontract.org/2004/07/Tilde.TextProcessor")]
    [System.SerializableAttribute()]
    public partial class TranslateResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int countSentencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int countTokensField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[][] originalSentenceRangesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double qualityEstimateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string translationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[][] translationSentenceRangesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int countSentences {
            get {
                return this.countSentencesField;
            }
            set {
                if ((this.countSentencesField.Equals(value) != true)) {
                    this.countSentencesField = value;
                    this.RaisePropertyChanged("countSentences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int countTokens {
            get {
                return this.countTokensField;
            }
            set {
                if ((this.countTokensField.Equals(value) != true)) {
                    this.countTokensField = value;
                    this.RaisePropertyChanged("countTokens");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[][] originalSentenceRanges {
            get {
                return this.originalSentenceRangesField;
            }
            set {
                if ((object.ReferenceEquals(this.originalSentenceRangesField, value) != true)) {
                    this.originalSentenceRangesField = value;
                    this.RaisePropertyChanged("originalSentenceRanges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double qualityEstimate {
            get {
                return this.qualityEstimateField;
            }
            set {
                if ((this.qualityEstimateField.Equals(value) != true)) {
                    this.qualityEstimateField = value;
                    this.RaisePropertyChanged("qualityEstimate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string translation {
            get {
                return this.translationField;
            }
            set {
                if ((object.ReferenceEquals(this.translationField, value) != true)) {
                    this.translationField = value;
                    this.RaisePropertyChanged("translation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[][] translationSentenceRanges {
            get {
                return this.translationSentenceRangesField;
            }
            set {
                if ((object.ReferenceEquals(this.translationSentenceRangesField, value) != true)) {
                    this.translationSentenceRangesField = value;
                    this.RaisePropertyChanged("translationSentenceRanges");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Systems", Namespace="http://schemas.datacontract.org/2004/07/LetsMT.Translation")]
    [System.SerializableAttribute()]
    public partial class Systems : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LetsMT.MTProvider.LetsMTAPI.MTSystem[] SystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LetsMT.MTProvider.LetsMTAPI.MTSystem[] System {
            get {
                return this.SystemField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemField, value) != true)) {
                    this.SystemField = value;
                    this.RaisePropertyChanged("System");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MTSystem", Namespace="http://schemas.datacontract.org/2004/07/LetsMT.Translation")]
    [System.SerializableAttribute()]
    public partial class MTSystem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LetsMT.MTProvider.LetsMTAPI.LangText DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LetsMT.MTProvider.LetsMTAPI.ObjectProperty[] MetadataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LetsMT.MTProvider.LetsMTAPI.Language SourceLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LetsMT.MTProvider.LetsMTAPI.Language TargetLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LetsMT.MTProvider.LetsMTAPI.LangText TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LetsMT.MTProvider.LetsMTAPI.LangText Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((this.DescriptionField.Equals(value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LetsMT.MTProvider.LetsMTAPI.ObjectProperty[] Metadata {
            get {
                return this.MetadataField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataField, value) != true)) {
                    this.MetadataField = value;
                    this.RaisePropertyChanged("Metadata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LetsMT.MTProvider.LetsMTAPI.Language SourceLanguage {
            get {
                return this.SourceLanguageField;
            }
            set {
                if ((this.SourceLanguageField.Equals(value) != true)) {
                    this.SourceLanguageField = value;
                    this.RaisePropertyChanged("SourceLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LetsMT.MTProvider.LetsMTAPI.Language TargetLanguage {
            get {
                return this.TargetLanguageField;
            }
            set {
                if ((this.TargetLanguageField.Equals(value) != true)) {
                    this.TargetLanguageField = value;
                    this.RaisePropertyChanged("TargetLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LetsMT.MTProvider.LetsMTAPI.LangText Title {
            get {
                return this.TitleField;
            }
            set {
                if ((this.TitleField.Equals(value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LangText", Namespace="http://schemas.datacontract.org/2004/07/LetsMT.Translation")]
    [System.SerializableAttribute()]
    public partial struct LangText : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Language", Namespace="http://schemas.datacontract.org/2004/07/LetsMT.Translation")]
    [System.SerializableAttribute()]
    public partial struct Language : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LetsMT.MTProvider.LetsMTAPI.LangText NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LetsMT.MTProvider.LetsMTAPI.LangText Name {
            get {
                return this.NameField;
            }
            set {
                if ((this.NameField.Equals(value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectProperty", Namespace="http://schemas.datacontract.org/2004/07/LetsMT.Translation")]
    [System.SerializableAttribute()]
    public partial struct ObjectProperty : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserData", Namespace="http://schemas.datacontract.org/2004/07/TranslationAPILib.Classes")]
    [System.SerializableAttribute()]
    public partial class UserData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string activeGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LetsMT.MTProvider.LetsMTAPI.UserGroup[] userGroupsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string activeGroup {
            get {
                return this.activeGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.activeGroupField, value) != true)) {
                    this.activeGroupField = value;
                    this.RaisePropertyChanged("activeGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.surnameField, value) != true)) {
                    this.surnameField = value;
                    this.RaisePropertyChanged("surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LetsMT.MTProvider.LetsMTAPI.UserGroup[] userGroups {
            get {
                return this.userGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.userGroupsField, value) != true)) {
                    this.userGroupsField = value;
                    this.RaisePropertyChanged("userGroups");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserGroup", Namespace="http://schemas.datacontract.org/2004/07/TranslationAPILib.Classes")]
    [System.SerializableAttribute()]
    public partial class UserGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LetsMT.MTProvider.LetsMTAPI.UserRole[] userRolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LetsMT.MTProvider.LetsMTAPI.UserRole[] userRoles {
            get {
                return this.userRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.userRolesField, value) != true)) {
                    this.userRolesField = value;
                    this.RaisePropertyChanged("userRoles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/TranslationAPILib.Classes")]
    [System.SerializableAttribute()]
    public partial class UserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Translation", Namespace="http://schemas.datacontract.org/2004/07/LetsMT.Translation")]
    [System.SerializableAttribute()]
    public partial class Translation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcceptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FromMyDomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Accepted {
            get {
                return this.AcceptedField;
            }
            set {
                if ((this.AcceptedField.Equals(value) != true)) {
                    this.AcceptedField = value;
                    this.RaisePropertyChanged("Accepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEdit {
            get {
                return this.CanEditField;
            }
            set {
                if ((this.CanEditField.Equals(value) != true)) {
                    this.CanEditField = value;
                    this.RaisePropertyChanged("CanEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FromMyDomain {
            get {
                return this.FromMyDomainField;
            }
            set {
                if ((this.FromMyDomainField.Equals(value) != true)) {
                    this.FromMyDomainField = value;
                    this.RaisePropertyChanged("FromMyDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://schemas.datacontract.org/2004/07/LetsMT.Translation")]
    [System.SerializableAttribute()]
    public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SegmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TranslatedSegmentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Segments {
            get {
                return this.SegmentsField;
            }
            set {
                if ((this.SegmentsField.Equals(value) != true)) {
                    this.SegmentsField = value;
                    this.RaisePropertyChanged("Segments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string System {
            get {
                return this.SystemField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemField, value) != true)) {
                    this.SystemField = value;
                    this.RaisePropertyChanged("System");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TranslatedSegments {
            get {
                return this.TranslatedSegmentsField;
            }
            set {
                if ((this.TranslatedSegmentsField.Equals(value) != true)) {
                    this.TranslatedSegmentsField = value;
                    this.RaisePropertyChanged("TranslatedSegments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TermCorpus", Namespace="http://www.tilde.com/LetsMT/SystemManager")]
    [System.SerializableAttribute()]
    public partial class TermCorpus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorpusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string CorpusId {
            get {
                return this.CorpusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CorpusIdField, value) != true)) {
                    this.CorpusIdField = value;
                    this.RaisePropertyChanged("CorpusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://letsmt.eu/translationAPI", ConfigurationName="LetsMTAPI.ITranslationServiceContract")]
    public interface ITranslationServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/Translate", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/TranslateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/TranslateFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        string Translate(string appID, string systemID, string text, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/TranslateEx", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/TranslateExResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/TranslateExFaultFault" +
            "", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        LetsMT.MTProvider.LetsMTAPI.TranslateResult TranslateEx(string appID, string systemID, string text, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/TranslateArray", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/TranslateArrayRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/TranslateArrayFaultFa" +
            "ult", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        string[] TranslateArray(string appID, string systemID, string[] textArray, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/TranslateArrayEx", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/TranslateArrayExRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/TranslateArrayExFault" +
            "Fault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        LetsMT.MTProvider.LetsMTAPI.TranslateResult[] TranslateArrayEx(string appID, string systemID, string[] textArray, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetSystemList", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetSystemListResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetSystemListFaultFau" +
            "lt", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        LetsMT.MTProvider.LetsMTAPI.Systems GetSystemList(string appID, string uiLanguageID, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetUserInfo", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetUserInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetUserInfoFaultFault" +
            "", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        LetsMT.MTProvider.LetsMTAPI.UserData GetUserInfo(string appID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/UpdateTranslation", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/UpdateTranslationResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/UpdateTranslationFaul" +
            "tFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        void UpdateTranslation(string appID, string systemID, string text, string translation, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetTranslations", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetTranslationsRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetTranslationsFaultF" +
            "ault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        LetsMT.MTProvider.LetsMTAPI.Translation[] GetTranslations(string appID, string systemID, string text, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/RemoveTranslation", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/RemoveTranslationResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/RemoveTranslationFaul" +
            "tFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        void RemoveTranslation(string appID, string systemID, string text, string translation, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/StartDocumentTranslat" +
            "ion", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/StartDocumentTranslat" +
            "ionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/StartDocumentTranslat" +
            "ionFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        string StartDocumentTranslation(string appID, string fileName, byte[] content, string systemID, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/DownloadDocumentTrans" +
            "lation", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/DownloadDocumentTrans" +
            "lationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/DownloadDocumentTrans" +
            "lationFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        byte[] DownloadDocumentTranslation(string appID, string id, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetDocumentTranslatio" +
            "nState", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetDocumentTranslatio" +
            "nStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetDocumentTranslatio" +
            "nStateFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        LetsMT.MTProvider.LetsMTAPI.Document GetDocumentTranslationState(string appID, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/RemoveDocumentTransla" +
            "tion", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/RemoveDocumentTransla" +
            "tionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/RemoveDocumentTransla" +
            "tionFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        void RemoveDocumentTranslation(string appID, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetDocumentTranslatio" +
            "nList", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetDocumentTranslatio" +
            "nListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetDocumentTranslatio" +
            "nListFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        LetsMT.MTProvider.LetsMTAPI.Document[] GetDocumentTranslationList(string appID, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetSystemTermCorpora", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetSystemTermCorporaR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/GetSystemTermCorporaF" +
            "aultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        LetsMT.MTProvider.LetsMTAPI.TermCorpus[] GetSystemTermCorpora(string systemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/AttachTermCorpusToSys" +
            "tem", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/AttachTermCorpusToSys" +
            "temResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/AttachTermCorpusToSys" +
            "temFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        string AttachTermCorpusToSystem(string systemID, string termCorpusTitle, string termCorpusFileName, string termCorpusFileType, byte[] termCorpusBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/AttachPreloadedTermCo" +
            "rpusToSystem", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/AttachPreloadedTermCo" +
            "rpusToSystemResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/AttachPreloadedTermCo" +
            "rpusToSystemFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        string AttachPreloadedTermCorpusToSystem(string systemID, string termCorpusTitle, string termCorpusFileName, string termCorpusFileType, string uploadedFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/RemoveTermCorpusFromS" +
            "ystem", ReplyAction="http://letsmt.eu/translationAPI/ITranslationServiceContract/RemoveTermCorpusFromS" +
            "ystemResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LetsMT.MTProvider.LetsMTAPI.Fault), Action="http://letsmt.eu/translationAPI/ITranslationServiceContract/RemoveTermCorpusFromS" +
            "ystemFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/LetsMT")]
        void RemoveTermCorpusFromSystem(string systemID, string termCorpusID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITranslationServiceContractChannel : LetsMT.MTProvider.LetsMTAPI.ITranslationServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TranslationServiceContractClient : System.ServiceModel.ClientBase<LetsMT.MTProvider.LetsMTAPI.ITranslationServiceContract>, LetsMT.MTProvider.LetsMTAPI.ITranslationServiceContract {
        
        public TranslationServiceContractClient() {
        }
        
        public TranslationServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TranslationServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TranslationServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TranslationServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Translate(string appID, string systemID, string text, string options) {
            return base.Channel.Translate(appID, systemID, text, options);
        }
        
        public LetsMT.MTProvider.LetsMTAPI.TranslateResult TranslateEx(string appID, string systemID, string text, string options) {
            return base.Channel.TranslateEx(appID, systemID, text, options);
        }
        
        public string[] TranslateArray(string appID, string systemID, string[] textArray, string options) {
            return base.Channel.TranslateArray(appID, systemID, textArray, options);
        }
        
        public LetsMT.MTProvider.LetsMTAPI.TranslateResult[] TranslateArrayEx(string appID, string systemID, string[] textArray, string options) {
            return base.Channel.TranslateArrayEx(appID, systemID, textArray, options);
        }
        
        public LetsMT.MTProvider.LetsMTAPI.Systems GetSystemList(string appID, string uiLanguageID, string options) {
            return base.Channel.GetSystemList(appID, uiLanguageID, options);
        }
        
        public LetsMT.MTProvider.LetsMTAPI.UserData GetUserInfo(string appID) {
            return base.Channel.GetUserInfo(appID);
        }
        
        public void UpdateTranslation(string appID, string systemID, string text, string translation, string options) {
            base.Channel.UpdateTranslation(appID, systemID, text, translation, options);
        }
        
        public LetsMT.MTProvider.LetsMTAPI.Translation[] GetTranslations(string appID, string systemID, string text, string options) {
            return base.Channel.GetTranslations(appID, systemID, text, options);
        }
        
        public void RemoveTranslation(string appID, string systemID, string text, string translation, string options) {
            base.Channel.RemoveTranslation(appID, systemID, text, translation, options);
        }
        
        public string StartDocumentTranslation(string appID, string fileName, byte[] content, string systemID, string options) {
            return base.Channel.StartDocumentTranslation(appID, fileName, content, systemID, options);
        }
        
        public byte[] DownloadDocumentTranslation(string appID, string id, string options) {
            return base.Channel.DownloadDocumentTranslation(appID, id, options);
        }
        
        public LetsMT.MTProvider.LetsMTAPI.Document GetDocumentTranslationState(string appID, string id) {
            return base.Channel.GetDocumentTranslationState(appID, id);
        }
        
        public void RemoveDocumentTranslation(string appID, string id) {
            base.Channel.RemoveDocumentTranslation(appID, id);
        }
        
        public LetsMT.MTProvider.LetsMTAPI.Document[] GetDocumentTranslationList(string appID, string options) {
            return base.Channel.GetDocumentTranslationList(appID, options);
        }
        
        public LetsMT.MTProvider.LetsMTAPI.TermCorpus[] GetSystemTermCorpora(string systemID) {
            return base.Channel.GetSystemTermCorpora(systemID);
        }
        
        public string AttachTermCorpusToSystem(string systemID, string termCorpusTitle, string termCorpusFileName, string termCorpusFileType, byte[] termCorpusBytes) {
            return base.Channel.AttachTermCorpusToSystem(systemID, termCorpusTitle, termCorpusFileName, termCorpusFileType, termCorpusBytes);
        }
        
        public string AttachPreloadedTermCorpusToSystem(string systemID, string termCorpusTitle, string termCorpusFileName, string termCorpusFileType, string uploadedFileName) {
            return base.Channel.AttachPreloadedTermCorpusToSystem(systemID, termCorpusTitle, termCorpusFileName, termCorpusFileType, uploadedFileName);
        }
        
        public void RemoveTermCorpusFromSystem(string systemID, string termCorpusID) {
            base.Channel.RemoveTermCorpusFromSystem(systemID, termCorpusID);
        }
    }
}
